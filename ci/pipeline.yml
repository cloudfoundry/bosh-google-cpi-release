---
groups:
  - name: bosh-google-cpi-release
    jobs:
      - test-unit
      - setup-infrastructure
      - deploy-ubuntu
      - run-bats
      - run-int
      - teardown-infrastructure
      - pre-release-fan-in
      - automatically-release-new-patch
      - promote-candidate
      - release-new-major
      - release-new-minor
      - release-new-patch
      - bump-golang-packages
      - bump-deps
  - name: docker-ci-image
    jobs:
      - build-dockerfile

jobs:
  - name: test-unit
    plan:
      - in_parallel:
        - get: bosh-google-cpi-release
          trigger: true
        - get: ci
        - get: google-cpi-registry-image
      - task: unit-tests
        file: ci/ci/tasks/unit-tests.yml
        image: google-cpi-registry-image

  - name: setup-infrastructure
    serial_groups: [integration]
    plan:
      - in_parallel:
        - get: bosh-google-cpi-release
          trigger: true
          passed: [test-unit]
        - get: stemcell
          resource: google-ubuntu-stemcell
          trigger: true
        - get: ci
        - get: google-cpi-registry-image
      - in_parallel: &teardown_step
        - task: teardown-infrastructure
          file: ci/ci/tasks/teardown-infrastructure.yml
          image: google-cpi-registry-image
          params:
            google_auto_network: google-cpi-ci-auto-network
            google_json_key_data: ((gcp_json_key))
            google_network: google-cpi-ci-network
            google_project: cloud-foundry-310819
            google_region: us-east1
            google_zone: us-east1-b
      - put: infrastructure
        params:
          env_name: master-bosh-google-cpi
          terraform_source: ci/ci/test_infrastructure
          delete_on_failure: true
      # delete VM created for regional backend service hack
      - in_parallel: *teardown_step

  - name: teardown-infrastructure
    serial_groups: [integration]
    plan:
      - in_parallel:
        - get: bosh-google-cpi-release
          trigger: true
          passed: [run-bats, run-int]
        - get: director-creds
          passed: [run-bats]
        - get: director-state
          passed: [deploy-ubuntu]
        - get: infrastructure
          trigger: true
          passed: [run-bats, run-int]
        - get: stemcell
          resource: google-ubuntu-stemcell
          passed: [run-bats, run-int]
        - get: bosh-cli
          params:
            globs:
            - 'bosh-cli-*-linux-amd64'
        - get: bosh-deployment
        - get: ci
        - get: bosh-shared-ci
        - get: google-cpi-registry-image
      - do: *teardown_step
      - task: build-release
        file: bosh-shared-ci/tasks/release/create-dev-release.yml
        input_mapping:
          release_repo: bosh-google-cpi-release
        output_mapping:
          release_tarball: bosh-cpi-release
      - task: setup-deployment
        file: ci/ci/tasks/setup-deployment.yml
        image: google-cpi-registry-image
      - task: teardown-director
        file: ci/ci/tasks/teardown-director.yml
        image: google-cpi-registry-image
        params:
          google_project:                 cloud-foundry-310819
          google_region:                  us-east1
          google_zone:                    us-east1-b
          cpi_source_branch:              master
          google_test_bucket_name:        bosh-gcp-cpi-release-pipeline-director-env
          google_subnetwork_range:        "10.0.0.0/24"
          google_subnetwork_gw:           "10.0.0.1"
          google_address_static_director: "10.0.0.6"
          google_json_key_data:           ((gcp_json_key))
      - put: infrastructure
        params:
          env_name: master-bosh-google-cpi
          terraform_source: ci/ci/test_infrastructure
          action: destroy
        get_params:
          terraform_source: ci/ci/test_infrastructure
          action: destroy

  - name: deploy-ubuntu
    serial_groups: [integration]
    plan:
      - in_parallel:
        - get: bosh-google-cpi-release
          trigger: true
          passed: [setup-infrastructure]
        - get: infrastructure
          resource: infrastructure
          trigger: true
          passed: [setup-infrastructure]
        - get: stemcell
          resource: google-ubuntu-stemcell
          trigger: true
          passed: [setup-infrastructure]
        - get: bosh-cli
          params:
            globs:
            - 'bosh-cli-*-linux-amd64'
        - get: bosh-deployment
        - get: ci
        - get: bosh-shared-ci
        - get: google-cpi-registry-image
      - task: build-release
        file: bosh-shared-ci/tasks/release/create-dev-release.yml
        input_mapping:
          release_repo: bosh-google-cpi-release
        output_mapping:
          release_tarball: bosh-cpi-release
      - task: setup-deployment
        file: ci/ci/tasks/setup-deployment.yml
        image: google-cpi-registry-image
      - task: setup-director
        file: ci/ci/tasks/setup-director.yml
        image: google-cpi-registry-image
        params:
          cpi_source_branch:              master
          google_project:                 cloud-foundry-310819
          google_region:                  us-east1
          google_zone:                    us-east1-b
          google_test_bucket_name:        bosh-gcp-cpi-release-pipeline-director-env
          google_subnetwork_range:        "10.0.0.0/24"
          google_subnetwork_gw:           "10.0.0.1"
          google_address_static_director: "10.0.0.6"
          google_json_key_data:           ((gcp_json_key))
        on_failure:
          task: teardown-director
          file: ci/ci/tasks/teardown-director.yml
          image: google-cpi-registry-image
          params:
            google_project:                 cloud-foundry-310819
            google_region:                  us-east1
            google_zone:                    us-east1-b
            cpi_source_branch:              master
            google_test_bucket_name:        bosh-gcp-cpi-release-pipeline-director-env
            google_subnetwork_range:        "10.0.0.0/24"
            google_subnetwork_gw:           "10.0.0.1"
            google_address_static_director: "10.0.0.6"
            google_json_key_data:           ((gcp_json_key))
      - put: director-creds
        params:
          file: director-creds/master-creds.yml
      - put: director-state
        params:
          file: director-state/master-manifest-state.json

  - name: run-bats
    serial: true
    serial_groups: [integration]
    plan:
      - in_parallel:
        - get: bosh-google-cpi-release
          trigger: true
          passed: [deploy-ubuntu]
        - get: stemcell
          resource: google-ubuntu-stemcell
          trigger: true
          passed: [deploy-ubuntu]
        - get: director-creds
          trigger: true
          passed: [deploy-ubuntu]
        - get: infrastructure
          trigger: true
          passed: [deploy-ubuntu]
        - get: bats
        - get: bosh-cli
          params:
            globs:
            - 'bosh-cli-*-linux-amd64'
        - get: ci
      - task: prepare-bats-config
        file: ci/ci/tasks/prepare-bats-config.yml
        params:
          cpi_source_branch:       master
          google_subnetwork_range: "10.0.0.0/24"
          stemcell_name:           bosh-google-kvm-ubuntu-jammy-go_agent
      - task: run-bats
        file: bats/ci/tasks/run-bats.yml

  - name: run-int
    serial_groups: [integration]
    plan:
      - in_parallel:
        - get: bosh-google-cpi-release
          trigger: true
          passed: [deploy-ubuntu]
        - get: stemcell
          resource: google-ubuntu-stemcell
          trigger: true
          passed: [deploy-ubuntu]
        - get: infrastructure
          trigger: true
          passed: [deploy-ubuntu]
        - get: ci
        - get: google-cpi-registry-image
      - task: run-int
        file: ci/ci/tasks/run-int.yml
        image: google-cpi-registry-image
        params:
          google_json_key_data:      ((integration_gcp_credentials_json))
          google_address_static_int: "10.0.0.100,10.0.0.101,10.0.0.102"

  - name: pre-release-fan-in
    plan:
    - get: bosh-google-cpi-release
      trigger: true
      passed:
      - run-int
      - run-bats
    - get: google-ubuntu-stemcell
      passed:
      - run-int
      - run-bats

  - name: automatically-release-new-patch
    serial_groups: [version]
    plan:
    - in_parallel:
      - get: bosh-google-cpi-release
        trigger: true
        passed:
        - pre-release-fan-in
      - get: golang-release
      - get: current-version
        resource: release-version-semver
      - get: patched-version
        resource: release-version-semver
        params:
          bump: patch
      - get: bosh-shared-ci
      - get: bosh-security-scanner-registry-image
    - try:
        task: check-for-patched-cves
        file: bosh-shared-ci/tasks/release/check-for-patched-cves.yml
        image: bosh-security-scanner-registry-image
        input_mapping:
          input_repo: bosh-google-cpi-release
          version: current-version
        params:
          SEVERITY: CRITICAL,HIGH
        on_success:
          do:
            - put: release-notes
              params:
                file: release-notes/release-notes.md
            - put: release-version-semver
              params:
                file: patched-version/version
    - task: ensure-cve-checker-succeeded
      file: bosh-shared-ci/tasks/release/ensure-task-succeeded.yml
      image: bosh-security-scanner-registry-image
      input_mapping:
        task-output-folder: patched_cves
    - try:
        task: check-for-updated-vendored-packages
        file: bosh-shared-ci/tasks/release/check-for-updated-vendored-packages.yml
        image: bosh-security-scanner-registry-image
        input_mapping:
          input_repo: bosh-google-cpi-release
          version: current-version
        params:
          PACKAGES: [golang-1-linux, golang-1-darwin]
        on_success:
          do:
            - put: release-notes
              params:
                file: release-notes/release-notes.md
            - put: release-version-semver
              params:
                file: patched-version/version
    - task: ensure-update-package-check-succeeded
      file: bosh-shared-ci/tasks/release/ensure-task-succeeded.yml
      image: bosh-security-scanner-registry-image
      input_mapping:
        task-output-folder: package-updates

  - name: promote-candidate
    disable_manual_trigger: true
    serial_groups: [version]
    plan:
      - in_parallel:
        - get: ci
        - get: bosh-google-cpi-release
          passed:
          - pre-release-fan-in
        - get: stemcell
          resource: google-ubuntu-stemcell
          passed:
          - pre-release-fan-in
        - get: version
          resource: release-version-semver
          trigger: true
        - get: release-notes
        - get: bosh-shared-ci
        - get: bosh-cli-registry-image
      - task: create-final-release
        image: bosh-cli-registry-image
        file: bosh-shared-ci/tasks/release/create-final-release.yml
        input_mapping:
          release_repo: backup-and-restore-sdk-release
        params:
          GIT_USER_NAME: CI Bot
          GIT_USER_EMAIL: bots@cloudfoundry.org
          PRIVATE_YML: |
            ---
            blobstore:
              options:
                credentials_source: static
                json_key: '((gcp_json_key))'
      - put: bosh-google-cpi-release
        params:
          repository: release_repo
          rebase: true
          tag: release_metadata/tag-name
      - put: github-release
        params:
          name: release_metadata/version
          tag: release_metadata/version
          body: release-notes/release-notes.md
          commitish: bosh-google-cpi-release/.git/ref
          generate_release_notes: true
      - put: release-notes
        params:
          file: release_metadata/empty-file

  - name: release-new-major
    serial_groups: [version]
    plan:
      - put: release-version-semver
        params:
          bump: major

  - name: release-new-minor
    serial_groups: [version]
    plan:
      - put: release-version-semver
        params:
          bump: minor

  - name: release-new-patch
    serial_groups: [version]
    plan:
      - put: release-version-semver
        params:
          bump: patch

  - name: build-dockerfile
    public: true
    serial: true
    plan:
      - get: bosh-google-cpi-release
      - get: weekly
        trigger: true
      - put: google-cpi-image
        params:
          build: "bosh-google-cpi-release/ci/docker/bosh-google-cpi-boshrelease"
        get_params:
          skip_download: true

  - name: bump-deps
    plan:
    - in_parallel:
      - get: bosh-google-cpi-release
      - get: golang-release
      - get: ci
      - get: google-cpi-registry-image
      - get: weekly
        trigger: true
    - task: bump-deps
      file: golang-release/ci/tasks/shared/bump-deps.yml
      input_mapping:
        input_repo: bosh-google-cpi-release
      output_mapping:
        output_repo: bosh-google-cpi-release
      params:
        SOURCE_PATH: src/bosh-google-cpi
    - task: unit-tests
      file: ci/ci/tasks/unit-tests.yml
      image: google-cpi-registry-image
    - put: bosh-google-cpi-release
      params:
        repository: bosh-google-cpi-release
        rebase: true

  - name: bump-golang-packages
    plan:
    - in_parallel:
      - get: bosh-google-cpi-release
      - get: golang-release
        trigger: true
    - task: bump-golang-packages
      file: golang-release/ci/tasks/shared/bump-golang-package.yml
      input_mapping:
        input_repo: bosh-google-cpi-release
      output_mapping:
        output_repo: bosh-google-cpi-release
      params:
        PACKAGES: [golang-1-linux, golang-1-darwin]
        PRIVATE_YML: |
          blobstore:
              options:
                credentials_source: static
                json_key: '((gcp_json_key))'
    - put: bosh-google-cpi-release
      params:
        repository: bosh-google-cpi-release
        rebase: true

resources:
  - name: weekly
    type: time
    source:
      start: 3:00 -0700
      stop: 4:30 -0700
      days: [ Saturday ]
      initial_version: true

  - name: bats
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-acceptance-tests.git
      branch: master

  - name: bosh-cli
    source:
      access_token: ((github_public_repo_token))
      owner: cloudfoundry
      repository: bosh-cli
    type: github-release

  - name: bosh-google-cpi-release
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-google-cpi-release.git

  - name: ci
    type: git
    source:
      paths:
        - ci/*
      uri: https://github.com/cloudfoundry/bosh-google-cpi-release.git
      branch: master

  - name: bosh-shared-ci
    type: git
    source:
      uri: git@github.com:cloudfoundry/bosh-shared-ci.git
      private_key: ((github_deploy_key_bosh-shared-ci.private_key))

  - name: golang-release
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-package-golang-release.git

  - name: bosh-deployment
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-deployment.git
      branch: master

  - name: github-release
    type: github-release
    source:
      owner: cloudfoundry
      repository: bosh-google-cpi-release
      access_token: ((github_public_repo_token))

  - name: release-notes
    type: gcs-resource
    source:
      bucket: bosh-gcp-cpi-release-pipeline
      json_key: ((gcp_json_key))
      versioned_file: release-notes/release-notes.md
      initial_version: "0"
      initial_content_text: ""

  - name: director-creds
    type: gcs-resource
    source:
      json_key:         ((gcp_json_key))
      bucket:           bosh-gcp-cpi-release-pipeline
      versioned_file:   ci-state/master-creds.yml

  - name: director-state
    type: gcs-resource
    source:
      json_key:         ((gcp_json_key))
      bucket:           bosh-gcp-cpi-release-pipeline
      versioned_file:   ci-state/master-manifest-state.json

  - name: google-ubuntu-stemcell
    type: bosh-io-stemcell
    source:
      name: bosh-google-kvm-ubuntu-jammy-go_agent
      force_regular: true
      tarball: true

  - name: infrastructure
    type: terraform
    source:
      backend_type: gcs
      backend_config:
        bucket: bosh-gcp-cpi-release-pipeline
        prefix: ci-state/terraform-master
        credentials: ((gcp_json_key))
      vars:
        google_project:           cloud-foundry-310819
        google_region:            us-east1
        google_zone:              us-east1-b
        google_json_key_data:     ((gcp_json_key))
        google_subnetwork_range:  "10.0.0.0/24"
        google_firewall_internal: google-cpi-ci-firewall-internal
        google_firewall_external: google-cpi-ci-firewall-external
        prefix:                   master
        google_auto_network:      google-cpi-ci-auto-network
        google_network:           google-cpi-ci-network

  - name: release-version-semver
    type: semver
    source:
      driver: git
      uri: git@github.com:cloudfoundry/bosh-google-cpi-release.git
      private_key: ((github_deploy_key_bosh-google-cpi-release.private_key))
      branch: semver
      file: release-current-version

  - name: bosh-cli-registry-image
    type: registry-image
    source:
      repository: bosh/cli
      username: ((dockerhub_username))
      password: ((dockerhub_password))

  - name: bosh-security-scanner-registry-image
    type: registry-image
    source:
      repository: bosh/security-scanner
      username: ((dockerhub_username))
      password: ((dockerhub_password))

  - name: google-cpi-registry-image
    type: registry-image
    source:
      repository: foundationalinfrastructure/gce-cpi-release
      username: ((dockerhub_username))
      password: ((dockerhub_password))

  - name: google-cpi-image
    type: docker-image
    source:
      repository: foundationalinfrastructure/gce-cpi-release
      username: ((dockerhub_username))
      password: ((dockerhub_password))

resource_types:
- name: gcs-resource
  type: docker-image
  source:
    repository: frodenas/gcs-resource
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
    tag: 1.3.9
