---
groups:
  - name: bosh-google-cpi-release
    jobs:
      - test-unit
      - build-candidate
      - setup-infrastructure
      - deploy-ubuntu
      - run-bats
      - run-int
      - teardown-infrastructure
      - pre-release-fan-in
      - automatically-release-new-patch
      - promote-candidate
      - promote-candidate-major
      - promote-candidate-minor
      - promote-candidate-patch
      - bump-golang-packages
      - bump-deps
  - name: docker-ci-image
    jobs:
      - build-dockerfile

jobs:
  - name: test-unit
    plan:
      - in_parallel:
        - {trigger: true, get: bosh-cpi-src, resource: bosh-cpi-src-in}
        - {get: ci}
      - task: unit-tests
        file: ci/ci/tasks/unit-tests.yml

  - name: build-candidate
    serial: true
    plan:
      - in_parallel:
        - {trigger: true, passed: [test-unit], get: bosh-cpi-src,   resource: bosh-cpi-src-in}
        - {trigger: false,                     get: version-semver, params: {bump: patch}}
        - {get: ci}
      - put: version-semver
        params: {file: version-semver/number}

      - task: build-release
        file: ci/ci/tasks/build-candidate.yml

      - put: bosh-cpi-dev-artifacts
        params: {file: candidate/*.tgz}

      - put: bosh-cpi-dev-artifacts-sha1
        params: {file: candidate/*.tgz.sha1}

  - name: setup-infrastructure
    serial_groups: [integration]
    plan:
      - in_parallel:
        - {trigger: true, passed: [build-candidate], get: bosh-cpi-src, resource: bosh-cpi-src-in}
        - {trigger: true,                            get: stemcell, resource: google-ubuntu-stemcell}
        - {get: ci}
      - in_parallel: &teardown_step
        - task: teardown-infrastructure
          file: ci/ci/tasks/teardown-infrastructure.yml
          params:
            google_auto_network: google-cpi-ci-auto-network
            google_json_key_data: ((gcp_credentials_json))
            google_network: google-cpi-ci-network
            google_project: cf-bosh-core
            google_region: us-east1
            google_zone: us-east1-b
      - put: infrastructure
        params:
          env_name: master-bosh-google-cpi
          terraform_source: ci/ci/test_infrastructure
          delete_on_failure: true
      # delete VM created for regional backend service hack
      - in_parallel: *teardown_step

  - name: teardown-infrastructure
    serial_groups: [integration]
    plan:
      - in_parallel:
        - {trigger: true,  passed: [run-bats, run-int],   get: bosh-cpi-src, resource: bosh-cpi-src-in}
        - {trigger: false, passed: [run-bats],            get: bosh-cpi-release, resource: bosh-cpi-dev-artifacts}
        - {trigger: false, passed: [run-bats],            get: director-creds, resource: director-creds}
        - {trigger: false, passed: [deploy-ubuntu],       get: director-state, resource: director-state}
        - {trigger: true , passed: [run-bats, run-int],   get: infrastructure, resource: infrastructure}
        - {trigger: false, passed: [run-bats, run-int],   get: stemcell, resource: google-ubuntu-stemcell}
        - get: bosh-cli
          params:
            globs:
            - 'bosh-cli-*-linux-amd64'
        - {trigger: false,                                get: bosh-deployment}
        - {get: ci}
      - in_parallel: *teardown_step
      - task: setup-deployment
        file: ci/ci/tasks/setup-deployment.yml
      - task: teardown-director
        file: ci/ci/tasks/teardown-director.yml
        params:
          google_project:                 cf-bosh-core
          google_region:                  us-east1
          google_zone:                    us-east1-b
          cpi_source_branch:              master
          google_test_bucket_name:        bosh-gcp-cpi-release-ci-test
          google_subnetwork_range:        "10.0.0.0/24"
          google_subnetwork_gw:           "10.0.0.1"
          google_address_static_director: "10.0.0.6"
          google_json_key_data:           ((gcp_credentials_json))
      - put: infrastructure
        params:
          env_name: master-bosh-google-cpi
          terraform_source: ci/ci/test_infrastructure
          action: destroy
        get_params:
          terraform_source: ci/ci/test_infrastructure
          action: destroy

  - name: deploy-ubuntu
    serial_groups: [integration]
    plan:
      - in_parallel:
        - {trigger: true, passed: [build-candidate, setup-infrastructure],  get: bosh-cpi-src, resource: bosh-cpi-src-in}
        - {trigger: true, passed: [build-candidate],                        get: bosh-cpi-release, resource: bosh-cpi-dev-artifacts}
        - {trigger: true, passed: [setup-infrastructure],                   get: infrastructure, resource: infrastructure}
        - {trigger: true, passed: [setup-infrastructure],                   get: stemcell, resource: google-ubuntu-stemcell}
        - get: bosh-cli
          params:
            globs:
            - 'bosh-cli-*-linux-amd64'
        - {trigger: false,                                                  get: bosh-deployment}
        - {get: ci}
      - task: setup-deployment
        file: ci/ci/tasks/setup-deployment.yml
      - task: setup-director
        file: ci/ci/tasks/setup-director.yml
        params:
          cpi_source_branch:              master
          google_project:                 cf-bosh-core
          google_region:                  us-east1
          google_zone:                    us-east1-b
          google_test_bucket_name:        bosh-gcp-cpi-release-ci-test
          google_subnetwork_range:        "10.0.0.0/24"
          google_subnetwork_gw:           "10.0.0.1"
          google_address_static_director: "10.0.0.6"
          google_json_key_data:           ((gcp_credentials_json))
        on_failure:
          task: teardown-director
          file: ci/ci/tasks/teardown-director.yml
          params:
            google_project:                 cf-bosh-core
            google_region:                  us-east1
            google_zone:                    us-east1-b
            cpi_source_branch:              master
            google_test_bucket_name:        bosh-gcp-cpi-release-ci-test
            google_subnetwork_range:        "10.0.0.0/24"
            google_subnetwork_gw:           "10.0.0.1"
            google_address_static_director: "10.0.0.6"
            google_json_key_data:           ((gcp_credentials_json))
      - put: director-creds
        params: {file: director-creds/master-creds.yml}
      - put: director-state
        params: {file: director-state/master-manifest-state.json}

  - name: run-bats
    serial: true
    serial_groups: [integration]
    plan:
      - in_parallel:
        - {get: bosh-cpi-src,     resource: bosh-cpi-src-in,        trigger: true, passed: [build-candidate, deploy-ubuntu]}
        - {get: bosh-cpi-release, resource: bosh-cpi-dev-artifacts, trigger: true, passed: [build-candidate, deploy-ubuntu]}
        - {get: stemcell,         resource: google-ubuntu-stemcell, trigger: true, passed: [deploy-ubuntu]}
        - {get: director-creds,                                     trigger: true, passed: [deploy-ubuntu]}
        - {get: infrastructure,                                     trigger: true, passed: [deploy-ubuntu]}
        - {get: bats}
        - get: bosh-cli
          params:
            globs:
            - 'bosh-cli-*-linux-amd64'
        - {get: ci}
      - task: prepare-bats-config
        file: ci/ci/tasks/prepare-bats-config.yml
        params:
          cpi_source_branch:       master
          google_subnetwork_range: "10.0.0.0/24"
          stemcell_name:           bosh-google-kvm-ubuntu-jammy-go_agent
      - task: run-bats
        file: bats/ci/tasks/run-bats.yml

  - name: run-int
    serial_groups: [integration]
    plan:
      - in_parallel:
        - {trigger: true, passed: [build-candidate, deploy-ubuntu],        get: bosh-cpi-src, resource: bosh-cpi-src-in}
        - {trigger: true, passed: [deploy-ubuntu],                         get: stemcell, resource: google-ubuntu-stemcell}
        - {trigger: true, passed: [deploy-ubuntu],                         get: infrastructure, resource: infrastructure}
        - {get: ci}
      - task: run-int
        file: ci/ci/tasks/run-int.yml
        params:
          google_json_key_data:      ((integration_gcp_credentials_json))
          google_address_static_int: "10.0.0.100,10.0.0.101,10.0.0.102"

  - name: pre-release-fan-in
    plan:
    - get: bosh-cpi-src-in
      trigger: true
      passed:
      - run-int
      - run-bats
    - get: google-ubuntu-stemcell
      passed:
      - run-int
      - run-bats
    - get: bosh-cpi-dev-artifacts
      passed:
      - run-bats

  - name: automatically-release-new-patch
    serial_groups: [version]
    serial: true
    plan:
    - in_parallel:
      - get: bosh-cpi-src-in
        trigger: true
        passed:
        - pre-release-fan-in
      - get: golang-release
      - get: current-version
        resource: release-version-semver
      - get: patched-version
        resource: release-version-semver
        params:
          bump: patch
    - try:
        task: check-for-updated-golang-package
        file: golang-release/ci/tasks/shared/check-for-updated-golang-package.yml
        input_mapping:
          input_repo: bosh-cpi-src-in
          version: current-version
        params:
          PACKAGES: [golang-1-linux, golang-1-darwin]
        on_success:
          do:
            - put: release-notes
              params:
                file: release-notes/release-notes.md
            - put: release-version-semver
              params:
                file: patched-version/version
    - try:
        task: check-for-patched-cves
        file: golang-release/ci/tasks/shared/check-for-patched-cves.yml
        input_mapping:
          input_repo: bosh-cpi-src-in
          version: current-version
        params:
          SEVERITY: CRITICAL,HIGH
          SOURCE_PATH: src
        on_success:
          do:
          - put: release-notes
            params:
              file: release-notes/release-notes.md
          - put: release-version-semver
            params:
              file: patched-version/version
    - task: ensure-cve-checker-succeeded
      file: golang-release/ci/tasks/shared/ensure-cve-checker-succeeded.yml
      params:
        description: |
          Since the previous step is wrapped in a "try", this task checks that the previous step fully executed.

  - name: promote-candidate
    serial_groups: [version]
    plan:
      - in_parallel:
        - get: ci
        - get: bosh-cpi-src
          resource: bosh-cpi-src-in
          passed:
          - pre-release-fan-in
        - get: stemcell
          resource: google-ubuntu-stemcell
          passed:
          - pre-release-fan-in
        - get: bosh-cpi-release
          resource: bosh-cpi-dev-artifacts
          passed:
          - pre-release-fan-in
        - get: release-version-semver
          trigger: true
        - get: release-notes
        - get: golang-release
      - task: promote
        file: ci/ci/tasks/promote-candidate.yml
        params:
          release_blobs_json_key: ((gcp_credentials_json))
      - put: bosh-cpi-src-out
        params:
          repository: promoted/repo
          rebase: true
          tag_prefix: "v"
          tag: promoted/semver_version
      - put: github-release
        params:
          name: promoted/prefixed_semver_version
          tag: promoted/prefixed_semver_version
          body: release-notes/release-notes.md
      - task: clear-release-notes
        file: golang-release/ci/tasks/shared/clear-release-notes.yml
      - put: release-notes
        params:
          file: release-notes/release-notes.md

  - name: promote-candidate-major
    serial_groups: [version]
    serial: true
    plan:
      - in_parallel:
        - get: bosh-cpi-src-in
          passed:
          - pre-release-fan-in
        - get: bosh-cpi-dev-artifacts
          passed:
          - pre-release-fan-in
      - put: release-version-semver
        params:
          bump: major

  - name: promote-candidate-minor
    serial_groups: [version]
    serial: true
    plan:
      - in_parallel:
        - get: bosh-cpi-src-in
          passed:
          - pre-release-fan-in
        - get: bosh-cpi-dev-artifacts
          passed:
          - pre-release-fan-in
      - put: release-version-semver
        params:
          bump: minor

  - name: promote-candidate-patch
    serial_groups: [version]
    serial: true
    plan:
      - in_parallel:
        - get: bosh-cpi-src-in
          passed:
          - pre-release-fan-in
        - get: bosh-cpi-dev-artifacts
          passed:
          - pre-release-fan-in
      - put: release-version-semver
        params:
          bump: patch

  - name: build-dockerfile
    public: true
    serial: true
    plan:
      - get: bosh-cpi-src-dockerfiles
        trigger: true
      - get: weekly
        trigger: true
      - put: google-cpi-image
        params:
          build: "bosh-cpi-src-dockerfiles/ci/docker/bosh-google-cpi-boshrelease"
        get_params:
          skip_download: true

  - name: bump-deps
    plan:
    - in_parallel:
      - get: bosh-cpi-src-in
      - get: golang-release
      - get: ci
      - get: weekly
        trigger: true
    - task: bump-deps
      file: golang-release/ci/tasks/shared/bump-deps.yml
      input_mapping:
        input_repo: bosh-cpi-src-in
      output_mapping:
        output_repo: bosh-cpi-src-out
      params:
        SOURCE_PATH: src/bosh-google-cpi
    - task: unit-tests
      file: ci/ci/tasks/unit-tests.yml
      input_mapping:
        bosh-cpi-src: bosh-cpi-src-out
    - put: bosh-cpi-src-out
      params:
        repository: bosh-cpi-src-out
        rebase: true

  - name: bump-golang-packages
    plan:
    - in_parallel:
      - get: bosh-cpi-src-in
      - get: golang-release
        trigger: true
    - task: bump-golang-packages
      file: golang-release/ci/tasks/shared/bump-golang-package.yml
      input_mapping:
        input_repo: bosh-cpi-src-in
      output_mapping:
        output_repo: bosh-cpi-src-out
      params:
        PACKAGES: [golang-1-linux, golang-1-darwin]
        PRIVATE_YML: |
          blobstore:
              options:
                credentials_source: static
                json_key: '((gcp_credentials_json))'
    - put: bosh-cpi-src-out
      params:
        repository: bosh-cpi-src-out
        rebase: true

resources:
  - name: weekly
    type: time
    source:
      start: 3:00 -0700
      stop: 4:30 -0700
      days: [ Saturday ]

  - name: bats
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-acceptance-tests.git
      branch: master

  - name: bosh-cli
    source:
      access_token: ((github_public_repo_token))
      owner: cloudfoundry
      repository: bosh-cli
    type: github-release

  - name: bosh-cpi-dev-artifacts
    type: gcs-resource
    source:
      json_key: ((gcp_credentials_json))
      bucket:   bosh-gcp-cpi-release
      regexp:   bosh-google-cpi-([0-9]+\.[0-9]+\.[0-9]+)\.tgz

  - name: bosh-cpi-dev-artifacts-sha1
    type: gcs-resource
    source:
      json_key: ((gcp_credentials_json))
      bucket:   bosh-gcp-cpi-release
      regexp:   bosh-google-cpi-([0-9]+\.[0-9]+\.[0-9]+)\.tgz.sha1

  - name: bosh-cpi-src-in
    type: git
    source:
      ignore_paths:
        - .final_builds/**/*.yml
        - releases/**/*.yml
        - ci/*
      uri: https://github.com/cloudfoundry/bosh-google-cpi-release.git

  - name: bosh-cpi-src-dockerfiles
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-google-cpi-release.git
      paths:
      - "ci/docker"

  - name: bosh-cpi-src-out
    type: git
    source:
      uri: git@github.com:cloudfoundry/bosh-google-cpi-release.git
      private_key: ((github_deploy_key_bosh-google-cpi-release.private_key))
      branch: master

  - name: golang-release
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-package-golang-release.git

  - name: bosh-deployment
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-deployment.git
      branch: master

  - name: ci
    type: git
    source:
      paths:
        - ci/*
      uri: https://github.com/cloudfoundry/bosh-google-cpi-release.git

  - name: github-release
    type: github-release
    source:
      owner: cloudfoundry
      repository: bosh-google-cpi-release
      access_token: ((github_public_repo_token))

  - name: release-notes
    type: gcs-resource
    source:
      bucket: bosh-ci-release-notes
      json_key: ((gcp_credentials_json))
      versioned_file: bosh-google-cpi-release/release-notes.md
      initial_version: "0"
      initial_content_text: ""

  - name: director-creds
    type: gcs-resource
    source:
      json_key:         ((gcp_credentials_json))
      bucket:           bosh-gcp-cpi-release-ci-state
      versioned_file:   master-creds.yml

  - name: director-state
    type: gcs-resource
    source:
      json_key:         ((gcp_credentials_json))
      bucket:           bosh-gcp-cpi-release-ci-state
      versioned_file:   master-manifest-state.json

  - name: google-ubuntu-stemcell
    type: bosh-io-stemcell
    source:
      name: bosh-google-kvm-ubuntu-jammy-go_agent
      force_regular: true
      tarball: true

  - name: infrastructure
    type: terraform
    source:
      backend_type: gcs
      backend_config:
        bucket: bosh-gcp-cpi-release-ci-state
        prefix: terraform-master
        credentials: ((gcp_credentials_json))
      vars:
        google_project:           cf-bosh-core
        google_region:            us-east1
        google_zone:              us-east1-b
        google_json_key_data:     ((gcp_credentials_json))
        google_subnetwork_range:  "10.0.0.0/24"
        google_firewall_internal: google-cpi-ci-firewall-internal
        google_firewall_external: google-cpi-ci-firewall-external
        prefix:                   master
        google_auto_network:      google-cpi-ci-auto-network
        google_network:           google-cpi-ci-network

  - name: release-version-semver
    type: semver
    source:
      driver: gcs
      json_key:          ((gcp_credentials_json))
      key:               release-current-version
      bucket:            bosh-gcp-cpi-release-version-semver

  - name: version-semver
    type: semver
    source:
      driver: gcs
      json_key:          ((gcp_credentials_json))
      key:               current-version
      bucket:            bosh-gcp-cpi-release-version-semver

  - name: google-cpi-image
    type: docker-image
    source:
      repository: boshcpi/gce-cpi-release
      email: cf-bosh-eng@pivotal.io
      username: ((docker.username))
      password: ((docker.password))

resource_types:
- name: gcs-resource
  type: docker-image
  source:
    repository: frodenas/gcs-resource
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
    tag: 1.3.9
